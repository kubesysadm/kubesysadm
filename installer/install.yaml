---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
    control-plane: controller-manager
  name: kubesysadm-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: cmmonitors.monitoring.sysadm.cn
spec:
  group: monitoring.sysadm.cn
  names:
    kind: CmMonitor
    listKind: CmMonitorList
    plural: cmmonitors
    singular: cmmonitor
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: CmMonitor is the Schema for the cmmonitors API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CmMonitorSpec defines the desired state of CmMonitor
            properties:
              kind:
                description: Kind configMap or secret
                type: string
              name:
                description: Name of configMap of Secret which will be monitored
                type: string
              namespace:
                description: NameSpace the namespace which the configMap or Secret
                  monitored in
                type: string
            type: object
          status:
            description: CmMonitorStatus defines the observed state of CmMonitor
            properties:
              lastVersion:
                description: last version of configMap or Secret
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: podcleanrules.monitoring.sysadm.cn
spec:
  group: monitoring.sysadm.cn
  names:
    kind: PodCleanRule
    listKind: PodCleanRuleList
    plural: podcleanrules
    singular: podcleanrule
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: PodCleanRule is the Schema for the PodCleanRule API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PodCleanRuleSpec defines the spec for cleaning pod rules
            properties:
              age:
                description: Age how long the pod is no-running which will to be deleted
                format: int32
                type: integer
              namespace:
                description: NameSpace the namespace where the pod in is to be monitoring
                type: string
              prefixname:
                description: |-
                  PrefixName the prefix of the pods' name which will be deleted.
                  normally, prefixname is the workload name. All pods in the NameSpace field specified
                  will be deleted if this field is empty.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-controller-manager
  namespace: kubesysadm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-leader-election-role
  namespace: kubesysadm-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-cmmonitor-editor-role
rules:
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors
  - podcleanrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-cmmonitor-viewer-role
rules:
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors
  - podcleanrules
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubesysadm-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - delete
  - deletecollection
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors/finalizers
  verbs:
  - update
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - cmmonitors/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - podcleanrules
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - podcleanrules/finalizers
  verbs:
  - update
- apiGroups:
  - monitoring.sysadm.cn
  resources:
  - podcleanrules/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-leader-election-rolebinding
  namespace: kubesysadm-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubesysadm-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubesysadm-controller-manager
  namespace: kubesysadm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesysadm-manager-role
subjects:
- kind: ServiceAccount
  name: kubesysadm-controller-manager
  namespace: kubesysadm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
  name: kubesysadm-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesysadm-proxy-role
subjects:
- kind: ServiceAccount
  name: kubesysadm-controller-manager
  namespace: kubesysadm-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
    control-plane: controller-manager
  name: kubesysadm-controller-manager-metrics-service
  namespace: kubesysadm-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kubesysadm
    control-plane: controller-manager
  name: kubesysadm-controller-manager
  namespace: kubesysadm-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.16.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: kubesysadm/kubesysadm-controller:v0.2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kubesysadm-controller-manager
      terminationGracePeriodSeconds: 10
